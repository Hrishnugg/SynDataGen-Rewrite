"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[596],{8596:function(e,t,o){o.r(t);var n=o(5893),a=o(7294),i=o(9477),r=o(4065),l=o(4458),s=o(6591);t.default=e=>{let{theme:t="dark"}=e,o=(0,a.useRef)(null),c=(0,a.useRef)(new i.Pa4(999,999,0)),d=(0,a.useRef)(t),m=(e,t,n,a,i,r,l)=>{var s,c;console.log("--- POSITION DEBUGGING ---"),console.log("Viewport Dimensions:",{clientWidth:null===(s=o.current)||void 0===s?void 0:s.clientWidth,clientHeight:null===(c=o.current)||void 0===c?void 0:c.clientHeight,aspect:t.aspect,visibleWidthAtZDepth:i,visibleHeightAtZDepth:r,calculatedWidth:l}),console.log("Camera Settings:",{position:t.position.toArray(),fov:t.fov,near:t.near,far:t.far});let d=1/0,m=-1/0,h=1/0,g=-1/0,p=1/0,u=-1/0;if(n.forEach((e,t)=>{let o=e.geometry.attributes.position.array;for(let e=0;e<o.length;e+=3)d=Math.min(d,o[e]),m=Math.max(m,o[e]),h=Math.min(h,o[e+1]),g=Math.max(g,o[e+1]),p=Math.min(p,o[e+2]),u=Math.max(u,o[e+2]);console.log("Wave ".concat(t," Position Range:"),{x:[d,m],y:[h,g],z:[p,u]})}),console.log("Overall Wave Particles Range:",{x:[d,m],y:[h,g],z:[p,u]}),a&&a.geometry){let e=a.geometry.attributes.position.array,t=1/0,o=-1/0,n=1/0,i=-1/0,r=1/0,l=-1/0;for(let a=0;a<e.length;a+=3)t=Math.min(t,e[a]),o=Math.max(o,e[a]),n=Math.min(n,e[a+1]),i=Math.max(i,e[a+1]),r=Math.min(r,e[a+2]),l=Math.max(l,e[a+2]);console.log("Background Particles Range:",{x:[t,o],y:[n,i],z:[r,l]})}console.log("Scene Hierarchy:",{scenePosition:e.position.toArray(),sceneRotation:e.rotation.toArray(),sceneScale:e.scale.toArray(),childCount:e.children.length}),e.children.forEach((e,t)=>{"Object3D"===e.type&&console.log("Scene Container ".concat(t,":"),{position:e.position.toArray(),rotation:e.rotation.toArray(),scale:e.scale.toArray(),childCount:e.children.length})})};return(0,a.useEffect)(()=>{let e,n,a,h;if(!o.current)return;console.log("Initializing ThemedParticles with theme:",t),console.log("DEBUG: WebGL Renderer Parameters:",{alpha:!0,premultipliedAlpha:!1,antialias:!0,theme:t,pixelRatio:Math.min(window.devicePixelRatio,2)}),d.current=t;let g=o.current.clientWidth,p=o.current.clientHeight;if(0===g||0===p){console.warn("Container has zero width or height. Delaying initialization.");let e=new ResizeObserver(t=>{let{width:n,height:a}=t[0].contentRect;n>0&&a>0&&(e.disconnect(),o.current.dataset.ready="true")});e.observe(o.current);return}console.log("Initializing with container dimensions:",{width:g,height:p});let u=new i.xsS;"light"===t?(u.background=new i.Ilk(16777215),u.environment=null,u.fog=null,console.log("DEBUG: Using light mode specific scene settings")):(u.background=new i.Ilk(17),u.fog=null,console.log("DEBUG: Using dark mode specific scene settings"));let M=new i.cPb(60,g/p,.1,1e3),w=g/p,f=w>1;M.position.set(0,0,80),M.lookAt(0,0,0),console.log("Camera position corrected:",{position:M.position.toArray(),lookAt:[0,0,0]});let v=new i.Tme;v.position.set(0,0,0),u.add(v);let C=new i.VLJ(100,10,4473924,2236962);C.position.set(0,0,0),C.visible=!1,u.add(C);let b=2*Math.tan(M.fov*Math.PI/180/2)*80,x=b*M.aspect*1;console.log("Calculated visible dimensions:",{visibleWidthAtZDepth:x,visibleHeightAtZDepth:b,aspectRatio:w,isLandscape:f,viewportCorrectionFactor:1}),v.position.set(0,0,0),console.log("Corrected scene container position:",{globalCenterOffsetX:0,sceneContainerPosition:v.position.toArray()}),console.log("Viewport correction factors:",{viewportCorrectionFactor:1,baseSize:(f?b:x)*1});let y=new i.CP7({antialias:!0,alpha:"light"===t,premultipliedAlpha:!1,preserveDrawingBuffer:"light"===t,powerPreference:"high-performance"}),P=Math.min(window.devicePixelRatio,2);y.setPixelRatio(P),y.autoClear=!0,y.setClearColor("light"===t?16777215:17,1),y.sortObjects=!0,"light"===t?(y.outputColorSpace=i.KI_,y.toneMapping=i.uL9,console.log("DEBUG: Using light mode specific renderer settings")):(y.outputColorSpace=i.GUF,y.toneMapping=i.LY2,console.log("DEBUG: Using dark mode specific renderer settings")),y.setSize(g,p,!1),y.domElement.style.position="absolute",y.domElement.style.left="0",y.domElement.style.top="0",y.domElement.style.width="100%",y.domElement.style.height="100%",o.current.appendChild(y.domElement),console.log("DEBUG: Initial renderer settings for ".concat(t," mode:"),{autoClear:y.autoClear,clearColor:y.getClearColor(new i.Ilk).getHexString(),alpha:y.domElement.style.backgroundColor?"set":"not set",sortObjects:y.sortObjects,premultipliedAlpha:"premultiplied"===y.domElement.style.backgroundColor}),y.setClearColor("light"===t?16777215:17,1),y.clear(!0,!0,!0),console.log("DEBUG: After initial clear for ".concat(t," mode"));let k=new r.x(y);if(k.setPixelRatio(P),k.setSize(g,p),"light"===t){console.log("DEBUG: Setting up light mode post-processing");let e=new l.C(u,M);e.clearColor=new i.Ilk(16777215),e.clearAlpha=1,k.addPass(e);let t=new s.m(new i.FM8(g,p),.6,.4,.9);t.renderToScreen=!1,k.addPass(t)}else{console.log("DEBUG: Setting up dark mode post-processing");let e=new l.C(u,M);e.clearColor=new i.Ilk(17),e.clearAlpha=1,k.addPass(e);let t=new s.m(new i.FM8(g,p),.8,.3,.8);t.renderToScreen=!0,k.addPass(t)}if(0===y.domElement.width||0===y.domElement.height){console.warn("Canvas has zero dimensions, cannot initialize composer");return}let E=f?.65:.75;console.log("Wave scale factor:",E);let D=.85*x;console.log("Wave width calculation:",{screenWidthFactor:.85,calculatedWidth:D,visibleWidthAtZDepth:x});let S=new i.Tme;S.position.set(0,0,0),v.add(S);let A=new i.Kj0(new i.xo$(.5,8,8),new i.vBJ({color:16711680}));A.visible=!1,S.add(A),(()=>{let e=new i.xo$(.5,8,8),t=new i.Kj0(e,new i.vBJ({color:16711680}));t.position.set(-x/2,0,0),t.name="leftMarker",t.visible=!1,u.add(t);let o=new i.Kj0(e,new i.vBJ({color:65280}));o.position.set(x/2,0,0),o.name="rightMarker",o.visible=!1,u.add(o);let n=new i.Kj0(e,new i.vBJ({color:255}));n.position.set(0,0,0),n.name="originMarker",n.visible=!1,u.add(n);let a=new i.nls({color:16776960}),r=[];r.push(new i.Pa4(-x/2,0,0)),r.push(new i.Pa4(x/2,0,0));let l=new i.u9r().setFromPoints(r),s=new i.x12(l,a);s.name="centerLine",s.visible=!1,u.add(s),console.log("Viewport boundary markers added:",{leftEdge:-x/2,rightEdge:x/2,center:0,visibleWidthAtZDepth:x})})();let I=(e,t,o)=>{if(!e||!e.geometry)return!1;let n=e.geometry.attributes.position.array,a=!1,i=.48*t,r=.48*o;for(let e=0;e<n.length;e+=3)Math.abs(n[e])>i&&(n[e]=Math.sign(n[e])*(i-2-3*Math.random()),a=!0),Math.abs(n[e+1])>r&&(n[e+1]=Math.sign(n[e+1])*(r-2-3*Math.random()),a=!0),Math.abs(n[e+2])>40&&(n[e+2]=Math.sign(n[e+2])*(38-3*Math.random()),a=!0);return a&&(e.geometry.attributes.position.needsUpdate=!0),a};"light"===t?(new i.Ilk(16777215),new i.Ilk(14281215),new i.Ilk(10734079),new i.Ilk(5084415),new i.Ilk(26367),new i.Ilk(18380),new i.Ilk(13184)):(new i.Ilk(16777215),new i.Ilk(10934527),new i.Ilk(5084415),new i.Ilk(18347),new i.Ilk(16738740),new i.Ilk(16716947),new i.Ilk(16711935)),"light"===t?(e=new i.Ilk(13184),n=new i.Ilk(15792383),a=new i.Ilk(5084415)):(e=new i.Ilk(16711935),n=new i.Ilk(15790335),a=new i.Ilk(18347));let F=(e,t,o)=>{let n=new i.Ilk;return n.r=e.r+(t.r-e.r)*o,n.g=e.g+(t.g-e.g)*o,n.b=e.b+(t.b-e.b)*o,n},z=[],R={minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0,minZ:1/0,maxZ:-1/0};for(let o=0;o<5;o++){let r=new i.u9r,l=new Float32Array(12e3),s=new Float32Array(12e3),c=new Float32Array(12e3),d=new Float32Array(4e3),m=5+2.5*o,h=Math.sqrt(16800),g=o%3;console.log("Creating Wave ".concat(o,":"),{waveHeight:m,waveType:g,gridWidth:h,particleCount:4e3});for(let t=0;t<4e3;t++){let i;let r=t%h/h*2-1,m=x/2*(r=Math.sign(r)*Math.pow(Math.abs(r),1.15))*1,g=Math.random()*Math.PI*2,p=(f?.65:.55)*(1-.3*Math.pow(Math.abs(r),2)),u=2*Math.pow(Math.random(),3)*p+.3*o,M=Math.sin(g)*u,w=Math.cos(g)*u,v=0+M;l[3*t]=m,l[3*t+1]=v,l[3*t+2]=w,R.minX=Math.min(R.minX,m),R.maxX=Math.max(R.maxX,m),R.minY=Math.min(R.minY,v),R.maxY=Math.max(R.maxY,v),R.minZ=Math.min(R.minZ,w),R.maxZ=Math.max(R.maxZ,w),t%1e3==0&&console.log("Wave ".concat(o," Particle ").concat(t," Position:"),{screenPosition:r,calculatedWidth:D,scaleFactor:1,x:m,y:v,z:w,radiusMultiplier:p,distance:u}),c[3*t]=m,c[3*t+1]=v,c[3*t+2]=w;let C=(m/(D/2)+1)/2;if(C<.45){if(i=F(e,n,Math.pow(C/.45,1)),.3>Math.random()){let e=.12*Math.random();i.offsetHSL(0,0,e-.06)}}else if(C>.55){if(i=F(n,a,Math.pow((C-.55)/.45,1)),.3>Math.random()){let e=.12*Math.random();i.offsetHSL(0,0,e-.06)}}else if(i=F(n,n,(C-.45)/.1),.5>Math.random()){let e=.15*Math.random();C<.5?i.offsetHSL(-.05,.1,e-.08):i.offsetHSL(.05,.1,e-.08)}s[3*t]=i.r,s[3*t+1]=i.g,s[3*t+2]=i.b,d[t]=.4+.7*Math.random()}console.log("Wave ".concat(o," Position Summary:"),{xRange:[R.minX,R.maxX],yRange:[R.minY,R.maxY],zRange:[R.minZ,R.maxZ],visibleWidthAtZDepth:x,calculatedWidth:D}),r.setAttribute("position",new i.TlE(l,3)),r.setAttribute("customColor",new i.TlE(s,3)),r.setAttribute("size",new i.TlE(d,1));let p=new i.jyz({uniforms:{pointTexture:{value:T()}},vertexShader:"\n          attribute float size;\n          attribute vec3 customColor;\n          varying vec3 vColor;\n          \n          void main() {\n            vColor = customColor;\n            vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n            gl_PointSize = size * (300.0 / -mvPosition.z);\n            gl_Position = projectionMatrix * mvPosition;\n          }\n        ",fragmentShader:"light"===t?"\n            uniform sampler2D pointTexture;\n            varying vec3 vColor;\n            \n            void main() {\n              vec4 texColor = texture2D(pointTexture, gl_PointCoord);\n              if (texColor.a < 0.1) discard;\n              gl_FragColor = vec4(vColor, 1.0) * texColor;\n            }\n          ":"\n            uniform sampler2D pointTexture;\n            varying vec3 vColor;\n            \n            void main() {\n              gl_FragColor = vec4(vColor, 1.0) * texture2D(pointTexture, gl_PointCoord);\n              if (gl_FragColor.a < 0.1) discard;\n            }\n          ",blending:"light"===t?i.bdR:i.WMw,depthTest:!1,transparent:!0,opacity:1,vertexColors:!0,depthWrite:!1,alphaTest:"light"===t?.1:.01}),u=new i.woe(r,p);u.userData={originalPositions:c,waveOffset:0,waveHeight:m,baseWaveHeight:m,minWaveHeight:.6*m,speed:.5+.5*Math.random(),frequency:.02+.02*Math.random(),baseFrequency:.02+.02*Math.random(),minFrequency:.015,amplitudeFluctuation:.2+.6*Math.random(),frequencyFluctuation:.3+.3*Math.random(),fluctuationSpeed:.15+.25*Math.random(),timeOffset:Math.random()*Math.PI*2,waveType:g,initialDistances:new Float32Array(4e3),initialAngles:new Float32Array(4e3)};for(let e=0;e<4e3;e++){let t=Math.random()*Math.PI*2,n=1.6*Math.pow(Math.random(),3)+.25*o;u.userData.initialDistances[e]=n,u.userData.initialAngles[e]=t}S.add(u),z.push(u)}console.log("All Wave Particles Position Range:",R),console.log("Comparison to viewport:",{xRangeVsVisibleWidth:[R.minX/(x/2),R.maxX/(x/2)],yRangeVsVisibleHeight:[R.minY/(b/2),R.maxY/(b/2)]}),console.log("Applying initial constraints to wave particles..."),z.forEach((e,t)=>{let o=I(e,x,b);console.log("Wave ".concat(t," initial constraint applied: ").concat(o))}),S.position.set(0,0,0);{let o=new i.u9r,r=new Float32Array(9e3),l=new Float32Array(9e3),s=new Float32Array(3e3),c={minX:1/0,maxX:-1/0,minY:1/0,maxY:-1/0,minZ:1/0,maxZ:-1/0};console.log("Creating background particles:",{count:3e3,visibleWidthAtZDepth:x,visibleHeightAtZDepth:b});for(let t=0;t<3e3;t++){let o;let i=f?.9:.8,d=2*Math.random()-1;.15>Math.random()&&(d=(.5>Math.random()?-1:1)*(.85+.15*Math.random()));let m=x/2*d*i*1,h=b/2*(2*Math.random()-1)*i,g=(2*Math.random()-1)*35;r[3*t]=m,r[3*t+1]=h,r[3*t+2]=g,c.minX=Math.min(c.minX,m),c.maxX=Math.max(c.maxX,m),c.minY=Math.min(c.minY,h),c.maxY=Math.max(c.maxY,h),c.minZ=Math.min(c.minZ,g),c.maxZ=Math.max(c.maxZ,g),t%1e3==0&&console.log("Background Particle ".concat(t," Position:"),{x:m,y:h,z:g,spreadFactor:i,bgScaleFactor:1,calculatedWidth:D,visibleHeightAtZDepth:b}),s[t]=.05>Math.random()?.8+1.2*Math.random():.1+.4*Math.random();let p=(m/(D/2*i)+1)/2;if(p<.45){if(o=F(e,n,Math.pow(p/.45,1.1)),.3>Math.random()){let e=.15*Math.random();o.offsetHSL(0,0,e-.07)}}else if(p>.55){if(o=F(n,a,Math.pow((p-.55)/.45,1.1)),.3>Math.random()){let e=.15*Math.random();o.offsetHSL(0,0,e-.07)}}else if(o=F(n,n,(p-.45)/.1),.5>Math.random()){let e=.15*Math.random();p<.5?o.offsetHSL(-.05,.1,e-.08):o.offsetHSL(.05,.1,e-.08)}.1>Math.random()&&(.5>Math.random()?o.offsetHSL(0,0,.1):o.offsetHSL(0,0,-.15)),l[3*t]=o.r,l[3*t+1]=o.g,l[3*t+2]=o.b}console.log("Background Particles Position Summary:",c),console.log("Background vs Viewport Comparison:",{xRangeVsVisibleWidth:[c.minX/(x/2),c.maxX/(x/2)],yRangeVsVisibleHeight:[c.minY/(b/2),c.maxY/(b/2)]}),o.setAttribute("position",new i.TlE(r,3)),o.setAttribute("customColor",new i.TlE(l,3)),o.setAttribute("size",new i.TlE(s,1));let d=new i.jyz({uniforms:{pointTexture:{value:T()}},vertexShader:"\n          attribute float size;\n          attribute vec3 customColor;\n          varying vec3 vColor;\n          \n          void main() {\n            vColor = customColor;\n            vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n            gl_PointSize = size * (300.0 / -mvPosition.z);\n            gl_Position = projectionMatrix * mvPosition;\n          }\n        ",fragmentShader:"light"===t?"\n            uniform sampler2D pointTexture;\n            varying vec3 vColor;\n            \n            void main() {\n              vec4 texColor = texture2D(pointTexture, gl_PointCoord);\n              if (texColor.a < 0.1) discard;\n              gl_FragColor = vec4(vColor, 1.0) * texColor;\n            }\n          ":"\n            uniform sampler2D pointTexture;\n            varying vec3 vColor;\n            \n            void main() {\n              gl_FragColor = vec4(vColor, 1.0) * texture2D(pointTexture, gl_PointCoord);\n              if (gl_FragColor.a < 0.1) discard;\n            }\n          ",blending:"light"===t?i.bdR:i.WMw,depthTest:!1,transparent:!0,opacity:1,vertexColors:!0,depthWrite:!1,alphaTest:"light"===t?.1:.01});h=new i.woe(o,d),u.add(h)}if(console.log("Applying initial constraints to background particles..."),h){let e=I(h,1.2*x,1.2*b);console.log("Background particles initial constraint applied: ".concat(e))}function T(){let e=document.createElement("canvas");e.width=64,e.height=64;let o=e.getContext("2d");if(!o)return console.error("Could not get 2D context for particle texture"),new i.xEZ;o.clearRect(0,0,64,64);let n=o.createRadialGradient(32,32,0,32,32,32);"light"===t?(n.addColorStop(0,"rgba(10, 80, 255, 1.0)"),n.addColorStop(.1,"rgba(20, 100, 255, 0.95)"),n.addColorStop(.25,"rgba(40, 120, 255, 0.9)"),n.addColorStop(.5,"rgba(60, 140, 255, 0.8)"),n.addColorStop(.75,"rgba(80, 160, 255, 0.6)"),n.addColorStop(1,"rgba(100, 180, 255, 0)")):(n.addColorStop(0,"rgba(255, 255, 255, 1)"),n.addColorStop(.1,"rgba(255, 255, 255, 0.95)"),n.addColorStop(.25,"rgba(240, 250, 255, 0.9)"),n.addColorStop(.5,"rgba(200, 230, 255, 0.6)"),n.addColorStop(.75,"rgba(150, 200, 255, 0.3)"),n.addColorStop(1,"rgba(100, 150, 255, 0)")),o.fillStyle=n,o.fillRect(0,0,64,64);let a=new i.xEZ(e);return a.needsUpdate=!0,a.premultiplyAlpha=!1,a}let W=new i.iMs,B=new i.FM8,L=new i.JOQ(new i.Pa4(0,0,1),0),U=e=>{let t=y.domElement.getBoundingClientRect();B.x=(e.clientX-t.left)/t.width*2-1,B.y=-((e.clientY-t.top)/t.height*2)+1,W.setFromCamera(B,M);let o=new i.Pa4;W.ray.intersectPlane(L,o),c.current.copy(o)},H=()=>{c.current.set(999,999,0)},Y=e=>{if(h&&h.geometry){let t=h.geometry.attributes.position.array,o=.48*x,n=.48*b;for(let a=0;a<3e3;a++){let i=3*a,r=.015*a,l=.012*a,s=.3+.2*Math.sin(.1*a),c=.2+.15*Math.cos(.1*a);t[i+1]+=.015*Math.sin(e*s+r),t[i]+=.01*Math.cos(e*c+l),t[i+2]+=.005*Math.sin(.2*e+.02*a),Math.abs(t[i])>o&&(t[i]=Math.sign(t[i])*(o-3*Math.random())),Math.abs(t[i+1])>n&&(t[i+1]=Math.sign(t[i+1])*(n-3*Math.random())),Math.abs(t[i+2])>35&&(t[i+2]=Math.sign(t[i+2])*(35-3*Math.random()))}h.geometry.attributes.position.needsUpdate=!0}},G=()=>{let e=0,t=0,o=0,n=0;return z.forEach(a=>{let i=a.geometry.attributes.position.array;for(let a=0;a<i.length;a+=3)e+=i[a],t+=i[a+1],o+=i[a+2],n++}),n>0&&(e/=n,t/=n,o/=n),console.log("Calculated wave center point:",{centerX:e,centerY:t,centerZ:o}),A&&A.visible&&A.position.set(e,t,o),{centerX:e,centerY:t,centerZ:o}};setTimeout(()=>{G()},1e3);let X=()=>{let e=.001*Date.now(),o=Math.floor(e)%10==0&&Math.floor(e)!==_;if(Math.floor(e)%5==0&&Math.floor(e)!==_&&(m(u,M,z,h,x,b,D),_=Math.floor(e)),z.forEach(t=>{let o=t.geometry.attributes.position.array,n=t.userData.originalPositions,a=t.userData.baseWaveHeight,i=t.userData.waveOffset,r=t.userData.speed,l=t.userData.baseFrequency,s=t.userData.waveType,d=e+t.userData.timeOffset,m=Math.sin(d*t.userData.fluctuationSpeed)*t.userData.amplitudeFluctuation,h=Math.cos(d*t.userData.fluctuationSpeed*.7)*t.userData.frequencyFluctuation,g=Math.max(a*(1+.6*m),t.userData.minWaveHeight),p=Math.max(l*(1+.15*h),t.userData.minFrequency);t.userData.waveHeight=g,t.userData.frequency=p*(f?1:.95);for(let a=0;a<o.length/3;a++){let l,d;let m=3*a,h=n[m],u=Math.abs(h/(D/2)),M=.2+.8*Math.cos(u*Math.PI*.5)*(1-.5*Math.pow(u,3)),w=p*(f?1:.85);switch(s){case 0:l=Math.sin(h*w+Math.PI/2+e*r)*g*M,d=.22*g*Math.sin(h*w*2.8+Math.PI/2+e*r*.7)*M;break;case 1:l=Math.sin(h*w+Math.PI/2+e*r)*g*M,d=.3*g*Math.sin(h*w*2+Math.PI/2+e*r*1.3)*M;break;case 2:l=Math.sin(h*w+Math.PI/2+e*r)*g*M,d=.4*g*Math.sin(h*w*1.5+Math.PI/2+e*r*.5)*M;break;default:l=Math.sin(h*p+e*r)*g*M,d=0}let v=i+l+d,C=t.userData.initialDistances[a],x=t.userData.initialAngles[a],y=v+Math.sin(x)*C,P=Math.cos(x)*C,k=o[m+1],S=o[m+2],A=y-k,I=P-S,F=Math.min(1,.15*Math.sqrt(A*A+I*I)),z=k+A*F*.12,R=S+I*F*.12,T=7/E*(f?.85:.7),W=10*(f?.85:1);if(999!==c.current.x){let e=h-c.current.x,t=z-c.current.y,o=Math.sqrt(e*e+t*t);if(o<T){let n=(1-o/T)*W,a=Math.pow(1-o/T,2);z+=Math.sin(Math.atan2(t,e))*n*a*(.5+.5*Math.random()),R+=(Math.random()-.5)*n*a*2}}let B=.5*b;Math.abs(z)>B&&(z=Math.sign(z)*(B-1-2*Math.random())),Math.abs(R)>40&&(R=Math.sign(R)*(39-2*Math.random())),o[m+1]=z,o[m+2]=R}t.geometry.attributes.position.needsUpdate=!0}),Y(e),Math.floor(60*e)%10==0){let t=!1;z.forEach(e=>{I(e,x,b)&&(t=!0)}),h&&I(h,1.1*x,1.1*b)&&(t=!0),t&&.1>Math.random()&&console.log("[".concat(e.toFixed(2),"] Particles constrained to stay within bounds"))}"light"===t?(o&&console.log("DEBUG: Light mode direct rendering at time ".concat(e.toFixed(2))),y.setClearColor(16777215,1),y.clear(!0,!0,!0),y.render(u,M)):(o&&console.log("DEBUG: Dark mode post-processed rendering at time ".concat(e.toFixed(2))),k.render()),requestAnimationFrame(X)},_=0,j=()=>{if(!o.current)return;let e=o.current.clientWidth,n=o.current.clientHeight;if(0===e||0===n)return;console.log("Window resize detected:",{newWidth:e,newHeight:n}),M.aspect=e/n,M.updateProjectionMatrix();let a=e/n,r=2*Math.tan(M.fov*Math.PI/180/2)*80,s=r*M.aspect*1;console.log("Resize: new calculated dimensions:",{newVisibleWidthAtZDepth:s,newVisibleHeightAtZDepth:r,newAspectRatio:a,newIsLandscape:a>1,viewportCorrectionFactor:1,previousVisibleWidthAtZDepth:x,previousVisibleHeightAtZDepth:b}),u.children.forEach(e=>{e.isMesh&&["leftMarker","rightMarker","originMarker"].includes(e.name)&&u.remove(e),e.isLine&&"centerLine"===e.name&&u.remove(e)});let c=new i.xo$(.5,8,8),d=new i.Kj0(c,new i.vBJ({color:16711680}));d.position.set(-s/2,0,0),d.name="leftMarker",d.visible=!1,u.add(d);let g=new i.Kj0(c,new i.vBJ({color:65280}));g.position.set(s/2,0,0),g.name="rightMarker",g.visible=!1,u.add(g);let p=new i.Kj0(c,new i.vBJ({color:255}));p.position.set(0,0,0),p.name="originMarker",p.visible=!1,u.add(p);let w=new i.nls({color:16776960}),f=[];f.push(new i.Pa4(-s/2,0,0)),f.push(new i.Pa4(s/2,0,0));let C=new i.u9r().setFromPoints(f),P=new i.x12(C,w);P.name="centerLine",P.visible=!1,u.add(P),console.log("Resize: updated viewport boundary markers:",{leftEdge:-s/2,rightEdge:s/2,center:0}),M.position.set(0,0,80),M.lookAt(0,0,0),console.log("Resize: camera position maintained:",{position:M.position.toArray(),lookAt:[0,0,0]}),v.position.set(0,0,0),console.log("Resize: maintained centered scene position:",{sceneContainerPosition:v.position.toArray()});let E=.85*s;console.log("Resize: new width calculation:",{newScreenWidthFactor:.85,newCalculatedWidth:E}),z.forEach((e,t)=>{let o=e.geometry.attributes.position.array,n=e.userData.originalPositions;for(let e=0;e<o.length/3;e++){let t=3*e,a=s/2*(n[t]/(D/2))*1;o[t]=a,n[t]=a}e.geometry.attributes.position.needsUpdate=!0,console.log("Resize: Updated wave ".concat(t," particle positions for new dimensions"))});let A=0;z.forEach(e=>{I(e,.9*s,.9*r)&&A++}),h&&I(h,1.05*s,1.05*r)&&A++,console.log("Resize: Constrained particles after resize: ".concat(A," systems affected")),S.position.set(0,0,0),y.setSize(e,n,!1),k.setSize(e,n),y.setClearColor("light"===t?16777215:17,1),"light"===t?(console.log("DEBUG: Reapplying light mode renderer settings after resize"),y.outputColorSpace=i.KI_,y.toneMapping=i.uL9):(console.log("DEBUG: Reapplying dark mode renderer settings after resize"),y.outputColorSpace=i.GUF,y.toneMapping=i.LY2),k.passes.forEach(e=>{e instanceof l.C&&(e.clearColor=new i.Ilk("light"===t?16777215:17),e.clearAlpha=1)}),setTimeout(()=>{m(u,M,z,h,s,r,E),console.log("Verifying centering after resize:"),G()},500)},Z=requestAnimationFrame(X);return window.addEventListener("resize",j),y.domElement.addEventListener("mousemove",U),y.domElement.addEventListener("mouseleave",H),()=>{var e,t;console.log("Cleaning up Three.js resources..."),console.log("Current theme at cleanup: ".concat(d.current)),cancelAnimationFrame(Z),null===(e=o.current)||void 0===e||e.removeEventListener("mousemove",U),null===(t=o.current)||void 0===t||t.removeEventListener("mouseleave",H),window.removeEventListener("resize",j),o.current&&y.domElement&&o.current.removeChild(y.domElement),z.forEach(e=>{e.geometry&&e.geometry.dispose(),e.material&&(e.material.uniforms&&e.material.uniforms.pointTexture&&e.material.uniforms.pointTexture.value.dispose(),e.material.dispose())}),h&&(h.geometry&&h.geometry.dispose(),h.material&&(h.material.uniforms&&h.material.uniforms.pointTexture&&h.material.uniforms.pointTexture.value.dispose(),h.material.dispose())),k.dispose(),y.dispose()}},[t]),(0,n.jsx)("div",{className:"wave-particles-container",style:{width:"100%",height:"100%",position:"relative",overflow:"hidden"},children:(0,n.jsx)("div",{ref:o,style:{width:"100%",height:"100%",position:"absolute"}})})}}}]);